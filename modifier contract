pragma solidity ^ 0.4.0;
contract Transaction 
{
event senderLog(address);
event valueLog(uint);
event CurrentBlockTime(uint);
event gasPriceOfTranx(uint);
event BlockNumber(uint);
event MinerAddress(address);

address public creator;
function transaction () public
{
creator = msg.sender;
}

modifier onlyOwner   // this function allows only owner to modify
{
require(msg.sender == creator);  //require would revert the gas consumed if there is some error
_;
}

modifier valid 
{
assert(msg.value > 1 ether);  // no gas would be reverted on using assert
_;
}

function () payable  onlyOwner valid   // to access payable one needs to send some ether
{
senderLog(msg.sender);
valueLog(msg.value);
CurrentBlockTime(now);
gasPriceOfTranx(tx.gasprice);
BlockNumber(block.number);
MinerAddress(block.coinbase);
}
}
